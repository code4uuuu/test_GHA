name: outlook build wrappers

on:
  push:
    branches:
      - master
      - company_release
      - "ACS/**"
      - "feature/**"
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      commitMessage:
        description: Enter the Commit Message
        required: true
env:
  SRCCLR_API_TOKEN: ${{ secrets.SRCCLR_API_TOKEN }}
  MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
  QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
  ITNOVUM_ARTIFACTORY_USERNAME: ${{ secrets.ITNOVUM_ARTIFACTORY_USERNAME }}
  ITNOVUM_ARTIFACTORY_PASSWORD: ${{ secrets.ITNOVUM_ARTIFACTORY_PASSWORD }}
  GITHUB_EVENT: ${{ github.event_name }}
  BRANCH_NAME: ${{ github.ref_name }}
  GIT_PASSWORD: ${{ secrets.BOT_GITHUB_TOKEN }}

jobs:
  Build:
    runs-on: ubuntu-latest
    if: github.ref_name != 'company_release'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: "Setup maven"
        shell: bash
        run: |
          [ -d ${HOME}/.m2/ ] || mkdir -p ${HOME}/.m2/
          cp -v _ci/settings.xml ${HOME}/.m2/ || cp -v .travis.settings.xml ${HOME}/.m2/settings.xml

      - name: "Cache the Maven packages to speed up build"
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: "Login to eim-container.it-novum.com"
        uses: docker/login-action@v1
        with:
          registry: eim-container.it-novum.com
          username: ${{ secrets.ITNOVUM_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ITNOVUM_ARTIFACTORY_PASSWORD }}

      - name: "Enable Experimental Docker features"
        run: |
          bash echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
          bash sudo service docker restart

      - name: "Start Build test script"
        run: bash _ci/build.sh dockerPullTag 
        
  Release:
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '[trigger release]') && github.ref_name == 'master' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: "Setup maven"
        shell: bash
        run: |
          [ -d ${HOME}/.m2/ ] || mkdir -p ${HOME}/.m2/
          cp -v _ci/settings.xml ${HOME}/.m2/ || cp -v .travis.settings.xml ${HOME}/.m2/settings.xml

      - name: "Cache the Maven packages to speed up build"
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: "Login to eim-container.it-novum.com"
        uses: docker/login-action@v1
        with:
          registry: eim-container.it-novum.com
          username: ${{ secrets.ITNOVUM_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ITNOVUM_ARTIFACTORY_PASSWORD }}

      - name: "Enable Experimental Docker features"
        run: |
          bash echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
          bash sudo service docker restart

      - name: "Start Release test script"
        run: bash _ci/release.sh dockerPullTagRel

      - name: "Prepare Staging Deploy"
        run: bash _ci/prepare_staging_deploy.sh

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_STAGING_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_STAGING_SECRET_KEY }}
          aws-region: eu-west-1

      - name: "Deploy to S3 Staging Bucket"
        run: aws s3 cp --recursive ./deploy_dir s3://alfresco-artefacts-staging/enterprise/OutlookIntegration/${VERSION}
        
  Company_Release:
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'company_release' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: "Set up Java"
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: "Setup maven"
        shell: bash
        run: |
          [ -d ${HOME}/.m2/ ] || mkdir -p ${HOME}/.m2/
          cp -v _ci/settings.xml ${HOME}/.m2/ || cp -v .travis.settings.xml ${HOME}/.m2/settings.xml

      - name: "Cache the Maven packages to speed up build"
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "Login to Quay.io"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: "Login to eim-container.it-novum.com"
        uses: docker/login-action@v1
        with:
          registry: eim-container.it-novum.com
          username: ${{ secrets.ITNOVUM_ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ITNOVUM_ARTIFACTORY_PASSWORD }}

      - name: "Enable Experimental Docker features"
        run: |
          bash echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
          bash sudo service docker restart

      - name: "Prepare Staging Deploy"
        run: bash _ci/prepare_release_deploy.sh

      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_RELEASE_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_RELEASE_SECRET_KEY }}
          aws-region: eu-west-1

      - name: "Deploy to S3 Bucket"
        run: aws s3 cp --recursive ./deploy_dir s3://eu.dl.alfresco.com/release/enterprise/OutlookIntegration/${VERSION}
